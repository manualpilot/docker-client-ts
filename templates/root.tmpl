import { Pool } from "undici";

import { type DockerClientParams, getPool } from "~/etc";
import { setupSSH } from "~/ssh";

{% for tag in tags %}
import {{ tag }} from "~/tags/{{ tag | lower }}"
{% endfor %}

export { ComposeSpecificationSchema } from "~/compose";
export { type DockerClientParams } from "~/etc"

export type DockerClientType = Awaited<ReturnType<typeof DockerClient>>;

export async function DockerClient(params: DockerClientParams) {
  const { pool, close } = await getPool(params);

  return {
  {% for tag in tags %}
    {{ tag }}: {{ tag }}(pool),
  {% endfor %}
    close: async () => {
      await pool.close();
      if (close) {
        await close();
      }
    }
  };
}
