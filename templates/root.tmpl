import { Pool } from "undici";

import { setupSSH } from "~/ssh";

{% for tag in tags %}
import {{ tag }} from "~/tags/{{ tag | lower }}"
{% endfor %}

export type DockerClientParams = {
  baseURL: URL;
  ssh?: {
    user: string;
    host: string;
    port: number;
    key: Buffer;
  };
};

export async function DockerClient(params: DockerClientParams) {
  const pool = await getPool(params);

  return {
  {% for tag in tags %}
    {{ tag }}: {{ tag }}(pool),
  {% endfor %}
  };
}

async function getPool(params: DockerClientParams): Promise<Pool> {
  const defaultParams: Pool.Options = {
    headersTimeout: 30_000,
  };

  if (params.ssh) {
    const socketPath = await setupSSH(
      params.ssh.user,
      params.ssh.host,
      params.ssh.port,
      params.ssh.key,
      params.baseURL.pathname,
    );

    return new Pool("http://localhost", {
      socketPath,
      ...defaultParams,
    });
  }

  if (params.baseURL.protocol === "unix:") {
    return new Pool("http://localhost", {
      socketPath: params.baseURL.pathname,
      ...defaultParams,
    });
  }

  return new Pool(params.baseURL, defaultParams);
}
